* tcpdump
** commands
*** track all udp traffic initiated by host (useful to track dns amplification attack)
#+begin_example
tcpdump -i any 'udp && src host 172.31.7.188' -vvnnS
#+end_example

*** track dns traffic that comes on the host
#+begin_example
tcpdump -i any '(udp && port 53 && dst host 172.31.7.188)' -vvnnS
#+end_example

*** track tcp syn packages from host: host tries to make to initiate tcp connection with an external source
#+begin_example
tcpdump -i any '((tcp[tcpflags] == tcp-syn) && src 172.31.7.188)' -vvnnS
#+end_example

*** track tcp syn-ack packages to host: external resources sent acknowledge about opening tcp connection
#+begin_example
tcpdump -i any '(tcp[13] = 18 and dst host 172.31.7.188)' -vvnnS
#+end_example

*** track traffic into redis and write all packets into pcap file (pcap file can be opened in wireshark then for analysis)
#+begin_example
tcpdump -i any 'dst port 6379' -vvnnS -w redis.pcap
#+end_example

*** track all udp output traffic except dns
#+begin_example
tcpdump -i any '(udp and not dst port 53 and src host 172.31.7.188)' -vvnnS
#+end_example

*** track all traffic with particular host with writing it into pcap file (pcap file can be opened in wireshark then for analysis)
#+begin_example
tcpdump -i any 'host 172.31.7.188' -vvnnS -w host-172-31-71-88.pcap
#+end_example

*** track all traffic on host except ssh, https, dns, rabbitmq, arp traffic
#+begin_example
tcpdump -i eth0 'not (port 22 or 443 or 53 or 5672) and not arp' -nnvvS
#+end_example

** flags
- =D= -- show all interfaces
- =i= - interface
- =nn= -- without resolving hostname and ports
- =vv= - verbose output
- =S= - get entire package
